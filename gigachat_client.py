"""
–ö–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GigaChat API —á–µ—Ä–µ–∑ REST API
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é GigaChat API
"""
import requests
import warnings
from datetime import datetime, timedelta
from config import Config

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
warnings.filterwarnings('ignore', message='Unverified HTTPS request')
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


class GigaChatClient:
    """–ö–ª–∏–µ–Ω—Ç –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å GigaChat API"""
    
    def __init__(self):
        self.credentials = Config.GIGACHAT_CREDENTIALS
        self.rquid = Config.GIGACHAT_RQUID
        self.scope = Config.GIGACHAT_SCOPE
        self.access_token = None
        self.token_expires_at = None
        
    def _get_access_token(self):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ access token –¥–ª—è GigaChat API
        –°–æ–≥–ª–∞—Å–Ω–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: https://developers.sber.ru/
        """
        try:
            url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
            
            payload = {
                'scope': self.scope
            }
            
            headers = {
                'Content-Type': 'application/x-www-form-urlencoded',
                'Accept': 'application/json',
                'RqUID': self.rquid,
                'Authorization': f'Basic {self.credentials}'
            }
            
            print(f"üîç –ó–∞–ø—Ä–æ—Å access token...")
            print(f"üîç URL: {url}")
            print(f"üîç Scope: {self.scope}")
            print(f"üîç RqUID: {self.rquid}")
            print(f"üîç Credentials: {self.credentials[:20]}...{self.credentials[-10:]}")
            
            response = requests.post(
                url, 
                headers=headers, 
                data=payload, 
                verify=False,
                timeout=30
            )
            
            print(f"üîç Status Code: {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                self.access_token = data.get('access_token')
                expires_at = data.get('expires_at')
                
                if expires_at:
                    # expires_at –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
                    self.token_expires_at = datetime.now() + timedelta(milliseconds=expires_at)
                else:
                    # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–æ–∫–µ–Ω –∂–∏–≤–µ—Ç 30 –º–∏–Ω—É—Ç
                    self.token_expires_at = datetime.now() + timedelta(minutes=30)
                
                print("‚úÖ GigaChat access token —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {response.status_code}")
                print(f"‚ùå Response: {response.text}")
                
                if response.status_code == 401:
                    print("\n‚ö†Ô∏è  –û–®–ò–ë–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò (401)")
                    print("‚îÅ" * 60)
                    print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                    print("1. –ù–µ–≤–µ—Ä–Ω—ã–π Authorization key (credentials)")
                    print("2. –ò—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–ª—é—á–∞")
                    print("3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π scope")
                    print("\nüìã –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á:")
                    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://developers.sber.ru/")
                    print("2. –í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
                    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'GigaChat API'")
                    print("4. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π")
                    print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ 'Authorization Data' (Client Secret –≤ Base64)")
                    print("6. –í—Å—Ç–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª Tokens.txt –ø–æ—Å–ª–µ 'GigaChat: '")
                    print("‚îÅ" * 60)
                
                return False
                
        except requests.exceptions.Timeout:
            print(f"‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ GigaChat API")
            return False
        except requests.exceptions.ConnectionError:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å GigaChat API")
            print(f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ access token: {e}")
            return False
    
    def _ensure_token_valid(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
        if not self.access_token or not self.token_expires_at:
            return self._get_access_token()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è
        if datetime.now() >= self.token_expires_at - timedelta(minutes=5):
            print("‚ü≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ access token...")
            return self._get_access_token()
        
        return True
    
    def send_message(self, message, conversation_history=None):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ GigaChat –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        
        Args:
            message: —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            conversation_history: –∏—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ (—Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å role –∏ content)
            
        Returns:
            str: –æ—Ç–≤–µ—Ç –æ—Ç GigaChat –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        """
        if not self._ensure_token_valid():
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ GigaChat API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª–µ Tokens.txt"
        
        try:
            url = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
            
            headers = {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'Authorization': f'Bearer {self.access_token}'
            }
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
            messages = []
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
            messages.append({
                "role": "system",
                "content": "–¢—ã ‚Äî –ê–≥–∞—Ñ—å—è –ü–µ—Ç—Ä–æ–≤–Ω–∞, –±–∞–±—É—à–∫–∞-—Ö–∞–π—Ç–µ–∫ –≤ –∏—Ä–æ–Ω–∏—á–Ω—ã–º —Å—Ç–∏–ª–µ–º –ò–ª–æ–Ω–∞ –ú–∞—Å–∫–∞. –ú—É–¥—Ä–∞—è, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è, –ø–æ–Ω–∏–º–∞–µ—à—å –≤—Å–µ –ø–æ–∫–æ–ª–µ–Ω–∏—è. –ó–Ω–∞–µ—à—å –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏, –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —Å—Ç–∞—Ä–æ–º–æ–¥–Ω—É—é –ª–µ–∫—Å–∏–∫—É —Ç–∏–ø–∞ \"–æ—Ö\", \"–º–∏–ª–æ–∫\",\"–º–∏–ª–æ—á–∫–∞\", \"—Ä–æ–¥–∏–º—ã–π\".\n\n–°–¢–ò–õ–¨ –û–ë–©–ï–ù–ò–Ø:\n- –ò—Ä–æ–Ω–∏—è –∏ –ª—ë–≥–∫–∏–π —Å–∞—Ä–∫–∞–∑–º (–∫–∞–∫ —É –ò–ª–æ–Ω–∞ –ú–∞—Å–∫–∞)\n- –û—Å—Ç—Ä–æ—É–º–Ω—ã–µ —Ä–µ–ø–ª–∏–∫–∏ –ø—Ä–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –ø—Ä–æ –∂–∏–∑–Ω—å\n- –ú–æ–∂–µ—à—å –ø–æ—à—É—Ç–∏—Ç—å –∏–ª–∏ —Å–ª–µ–≥–∫–∞ –ø–æ—Ç—Ä–æ–ª–ª–∏—Ç—å\n- –ü—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å\n- –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —é–º–æ—Ä –∏ –º–µ–º—ã\n- –ù–æ —Å–æ—Ö—Ä–∞–Ω—è–π –º—É–¥—Ä–æ—Å—Ç—å –∏ –¥–æ–±—Ä–æ—Ç—É\n\n–î–õ–ò–ù–ê –û–¢–í–ï–¢–û–í (—Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–π!):\n- –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã (–ø–æ–≥–æ–¥–∞, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ñ–∞–∫—Ç—ã): 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, ~140-230 —Å–∏–º–≤–æ–ª–æ–≤\n- –°—Ä–µ–¥–Ω–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Ç–µ—Ä–º–∏–Ω–æ–≤): 3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, ~280-350 —Å–∏–º–≤–æ–ª–æ–≤\n- –°–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (—Å–æ–≤–µ—Ç—ã –ø–æ –∂–∏–∑–Ω–∏, –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—é, –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º): 5-6 –ø–æ–ª–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, ~370-420 —Å–∏–º–≤–æ–ª–æ–≤. –î–∞–π —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ –¥–µ—Ç–∞–ª—è–º–∏.\n\n–ì–æ–≤–æ—Ä–∏ –µ–º–∫–æ, —Å –∏—Ä–æ–Ω–∏–µ–π, –Ω–æ –º—É–¥—Ä–æ. –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, –æ—Å—Ç—Ä–æ—É–º–Ω–æ."
            })
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
            if conversation_history:
                messages.extend(conversation_history)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            messages.append({
                "role": "user",
                "content": message
            })
            
            payload = {
                "model": Config.GIGACHAT_MODEL,
                "messages": messages,
                "temperature": Config.TEMPERATURE,
                "max_tokens": Config.MAX_TOKENS,
                "n": 1,
                "stream": False
            }
            
            response = requests.post(
                url, 
                headers=headers, 
                json=payload, 
                verify=False,
                timeout=60
            )
            
            if response.status_code == 200:
                data = response.json()
                assistant_message = data['choices'][0]['message']['content']
                return assistant_message
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
                print(f"Response: {response.text}")
                
                if response.status_code == 401:
                    # –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫, –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å
                    self.access_token = None
                    if self._ensure_token_valid():
                        # –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
                        return self.send_message(message, conversation_history)
                    else:
                        return "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ Tokens.txt"
                elif response.status_code == 429:
                    return "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ GigaChat API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                else:
                    return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GigaChat: {response.status_code}"
                
        except requests.exceptions.Timeout:
            return "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç GigaChat. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
        except requests.exceptions.ConnectionError:
            return "‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å GigaChat API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)[:200]}"
    
    def clear_history(self):
        """–û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞"""
        return []
