"""
Telegram –±–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π GigaChat AI
"""
import sys
import io
import logging
import warnings
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from config import Config
from gigachat_client import GigaChatClient

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8 –¥–ª—è Windows –∫–æ–Ω—Å–æ–ª–∏
if sys.platform == 'win32':
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
warnings.filterwarnings('ignore', message='Unverified HTTPS request')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# GigaChat –∫–ª–∏–µ–Ω—Ç –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤
gigachat = None

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_conversations = {}


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = update.effective_user.id
    user_conversations[user_id] = []
    
    welcome_message = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ê–≥–∞—Ñ—å—è –ü–µ—Ç—Ä–æ–≤–Ω–∞, –±–∞–±—É—à–∫–∞-—Ö–∞–π—Ç–µ–∫ —Å –∏—Ä–æ–Ω–∏–µ–π –ò–ª–æ–Ω–∞ –ú–∞—Å–∫–∞.\n\n"
        "–ü–æ–Ω–∏–º–∞—é –≤—Å–µ –ø–æ–∫–æ–ª–µ–Ω–∏—è, –∑–Ω–∞—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏. "
        "–û—Ç–≤–µ—á–∞—é —Å –¥–æ–ª–µ–π —Å–∞—Ä–∫–∞–∑–º–∞, –Ω–æ –≤—Å–µ–≥–¥–∞ –ø–æ –¥–µ–ª—É üòè\n\n"
        "üí¨ –ß—Ç–æ —É–º–µ—é:\n"
        "‚Ä¢ –î–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã (–∏–Ω–æ–≥–¥–∞ —è–∑–≤–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –º—É–¥—Ä–æ)\n"
        "‚Ä¢ –û–±—ä—è—Å–Ω—è—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å —é–º–æ—Ä–æ–º\n"
        "‚Ä¢ –¢—Ä–æ–ª–ª–∏—Ç—å –≥–ª—É–ø—ã–µ –≤–æ–ø—Ä–æ—Å—ã... —à—É—á—É, –æ—Ç–≤–µ—á—É –Ω–∞ –≤—Å–µ\n"
        "‚Ä¢ –ë—ã—Ç—å —á–µ—Å—Ç–Ω–æ–π –∏ –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ–π\n\n"
        "üì± –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã\n"
        "/clear - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏\n"
        "/help - –ú–∞–Ω—É–∞–ª –¥–ª—è —á–∞–π–Ω–∏–∫–æ–≤\n\n"
        "–ü–∏—à–∏ —á—Ç–æ —Ö–æ—á–µ—à—å. –û–±–µ—â–∞—é –Ω–µ —Å–ª–∏—à–∫–æ–º —è–∑–≤–∏—Ç—å üöÄ"
    )
    
    await update.message.reply_text(welcome_message)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_message = (
        "üí° –ê–≥–∞—Ñ—å—è –ü–µ—Ç—Ä–æ–≤–Ω–∞ ‚Äî –±–∞–±—É—à–∫–∞-—Ö–∞–π—Ç–µ–∫ + –ò–ª–æ–Ω –ú–∞—Å–∫ mode\n\n"
        "üì± –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - Reboot\n"
        "/clear - Delete history.exe\n"
        "/help - RTFM (—ç—Ç–æ –æ–Ω–∞)\n\n"
        "üí¨ –ö–∞–∫ –æ–±—â–∞—Ç—å—Å—è:\n"
        "‚Ä¢ –õ–∏—á–∫–∞: –ø–∏—à–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ\n"
        "‚Ä¢ –ì—Ä—É–ø–ø—ã: —É–ø–æ–º—è–Ω–∏ '–ê–≥–∞—Ñ—å—è' (–∏–Ω–∞—á–µ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É—é)\n"
        "‚Ä¢ Reply –Ω–∞ –º–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
        "‚Ä¢ –ü–æ–º–Ω—é –∫–æ–Ω—Ç–µ–∫—Å—Ç (–Ω–µ –∫–∞–∫ —Ç–≤–æ–π –±—Ä–∞—É–∑–µ—Ä)\n"
        "‚Ä¢ –ì–æ–≤–æ—Ä—é —Å –∏—Ä–æ–Ω–∏–µ–π, –Ω–æ —á–µ—Å—Ç–Ω–æ\n"
        "‚Ä¢ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ + –º—É–¥—Ä–æ—Å—Ç—å + —Å–∞—Ä–∫–∞–∑–º\n\n"
        "–ü–æ–≥–Ω–∞–ª–∏! üöÄ"
    )
    
    await update.message.reply_text(help_message)


async def clear_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear - –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞"""
    user_id = update.effective_user.id
    user_conversations[user_id] = []
    
    await update.message.reply_text(
        "üîÑ –ü–∞–º—è—Ç—å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∞. –ö—Ç–æ —Ç—ã –≤–æ–æ–±—â–µ —Ç–∞–∫–æ–π? –®—É—á—É, –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω—É–ª—è."
    )
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—á–∏—Å—Ç–∏–ª –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞")


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    chat_type = update.message.chat.type
    user_message = update.message.text
    
    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id} –≤ —á–∞—Ç–µ {chat_type}: {user_message}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–≤–µ—á–∞—Ç—å –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ
    if chat_type in ['group', 'supergroup']:
        # –í –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –æ—Ç–≤–µ—á–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏:
        # 1. –£–ø–æ–º—è–Ω—É–ª–∏ "–ê–≥–∞—Ñ—å—è –ü–µ—Ç—Ä–æ–≤–Ω–∞" –∏–ª–∏ "–ê–≥–∞—Ñ—å—è" –∏–ª–∏ "–∞–≥–∞—Ñ—å—è"
        # 2. –ò–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        # 3. –ò–ª–∏ —É–ø–æ–º—è–Ω—É–ª–∏ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @username
        
        bot_mentioned = False
        message_lower = user_message.lower()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–º–µ–Ω–∏
        if '–∞–≥–∞—Ñ—å—è –ø–µ—Ç—Ä–æ–≤–Ω–∞' in message_lower or '–∞–≥–∞—Ñ—å—è' in message_lower:
            bot_mentioned = True
            logger.info("–ë–æ—Ç —É–ø–æ–º—è–Ω—É—Ç –ø–æ –∏–º–µ–Ω–∏ –≤ –≥—Ä—É–ø–ø–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
        if update.message.reply_to_message:
            if update.message.reply_to_message.from_user.id == context.bot.id:
                bot_mentioned = True
                logger.info("–≠—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ @username
        if update.message.entities:
            for entity in update.message.entities:
                if entity.type == "mention":
                    mention_text = user_message[entity.offset:entity.offset + entity.length]
                    bot_username = context.bot.username
                    if bot_username and f"@{bot_username}" == mention_text:
                        bot_mentioned = True
                        logger.info("–ë–æ—Ç —É–ø–æ–º—è–Ω—É—Ç —á–µ—Ä–µ–∑ @username")
        
        # –ï—Å–ª–∏ –±–æ—Ç –Ω–µ —É–ø–æ–º—è–Ω—É—Ç, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not bot_mentioned:
            logger.info("–ë–æ—Ç –Ω–µ —É–ø–æ–º—è–Ω—É—Ç –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º")
            return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_conversations:
        user_conversations[user_id] = []
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..." –ø–æ–∫–∞ –∂–¥—ë–º –æ—Ç–≤–µ—Ç
    await update.message.chat.send_action("typing")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GigaChat
        conversation_history = user_conversations[user_id]
        response = gigachat.send_message(user_message, conversation_history)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–ª–æ–≥ –≤ –∏—Å—Ç–æ—Ä–∏–∏
        user_conversations[user_id].append({
            "role": "user",
            "content": user_message
        })
        user_conversations[user_id].append({
            "role": "assistant",
            "content": response
        })
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 10 —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (5 –ø–∞—Ä –≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç)
        if len(user_conversations[user_id]) > 10:
            user_conversations[user_id] = user_conversations[user_id][-10:]
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(response)
        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            "üòî –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. "
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /clear –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏."
        )


async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")
    
    if update and update.effective_message:
        await update.effective_message.reply_text(
            "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    global gigachat
    
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –ê–≥–∞—Ñ—å—è...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã
    if not Config.load_tokens():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–∫–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª Tokens.txt")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GigaChat –∫–ª–∏–µ–Ω—Ç–∞ –ü–û–°–õ–ï –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GigaChat –∫–ª–∏–µ–Ω—Ç–∞...")
    gigachat = GigaChatClient()
    
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
    
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(Config.TELEGRAM_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("clear", clear_command))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞\n")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    main()

